# [MAN](https://www.npmjs.com/package/@totemorg/man)

Extends [MathJX](https://www.npmjs.com/package/@totemorg/mathjx) with various AI/ML methods:

* [light weight image processing](https://www.npmjs.com/package/jimp)  
* [symbolic algebra](https://www.npmjs.com/package/mathjs)  
* time series analysis (
	[digital signal](https://www.npmjs.com/package/dsp), 
	[spectral](https://www.npmjs.com/package/fft-js))  
* hidden markov methods (
	[viterbi, baum-welch](https://www.npmjs.com/package/nodehmm), 
	[EM](https://www.npmjs.com/package/expectation-maximization))  
* matrix decompositions (
	[eigen spectrums](https://www.npmjs.com/package/node-svd))  
* [bayesian belief networks](https://www.npmjs.com/package/jsbayes)  
* [recurrent neural networks](https://www.npmjs.com/package/recurrent-js)  
* [convolutional neural networks](http://caffe.berkeleyvision.org/)  
* regression methods (
	[logistic](https://www.npmjs.com/package/ml-logistic-regression), 
	[support vector](https://www.npmjs.com/package/node-svm), 
	[other](https://www.npmjs.com/package/ml))  
* non-linear optimizers (
	[least cost path](https://www.npmjs.com/package/edmonds-blossom),
	[linear programming](https://www.npmjs.com/package/javascript-lp-solver),
	[gradient descent, newton-raphton](https://www.npmjs.com/package/newton-raphson-method))  
* neural networks (
	[convolutional](https://www.npmjs.com/package/@tensorflow/tfjs),
	[language models](https://www.npmjs.com/package/@tensorflow/tfjs))  
* special functions (
	[gamma](https://www.npmjs.com/package/gamma), 
	[multivariate normal](https://www.npmjs.com/package/multivariate-normal), 
	[rieman-zeta](https://www.npmjs.com/package/math-riemann-zeta)).

See the Program Reference for method details.

## Usage

Acquire and optionally configure **MAN** as follows:

	const $ = require("man").config({
		key: value, 						// set key
		"key.key": value, 					// indexed set
		"key.key.": value					// indexed append
	});

where configuration keys follow [ENUMS deep copy conventions](https://www.npmjs.com/package/@totemorg/enums)

## Manage

	npm install @totemorg/enums	# install
	npm run start [ ? | $ | ...]	# Unit test
	npm run verminor				# Roll minor version
	npm run vermajor				# Roll major version
	npm run redoc					# Regen documentation
	
## Program Reference
<details>
<summary>
<i>Open/Close</i>
</summary>
{{>main}}
</details>

## Contacting, Contributing, Following

Feel free to 
* submit and status [TOTEM issues](http://totem.hopto.org/issues.view) 
* contribute to [TOTEM notebooks](http://totem.hopto.org/shares/notebooks/) 
* revise [TOTEM requirements](http://totem.hopto.org/reqts.view) 
* browse [TOTEM holdings](http://totem.hopto.org/) 
* or follow [TOTEM milestones](http://totem.hopto.org/milestones.view) 

## License

[MIT](LICENSE)


* * *

&copy; 2012 ACMESDS