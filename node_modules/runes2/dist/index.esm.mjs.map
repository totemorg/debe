{"version":3,"file":"index.esm.mjs","sources":["../src/index.ts"],"sourcesContent":["export const enum EnumRunesCode\n{\n\tHIGH_SURROGATE_START = 0xd800,\n\tHIGH_SURROGATE_END = 0xdbff,\n\n\tLOW_SURROGATE_START = 0xdc00,\n\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\n\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n\tVARIATION_MODIFIER_START = 0xfe00,\n\tVARIATION_MODIFIER_END = 0xfe0f,\n\n\tDIACRITICAL_MARKS_START = 0x20d0,\n\tDIACRITICAL_MARKS_END = 0x20ff,\n\n\tZWJ = 0x200d,\n}\n\nexport const GRAPHEMS = Object.freeze([\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n]);\n\nexport const enum EnumCodeUnits\n{\n\tunit_1 = 1,\n\tunit_2 = 2,\n\tunit_4 = 4,\n}\n\nexport function runes(string: string): string[]\n{\n\tif (typeof string !== 'string')\n\t{\n\t\tthrow new TypeError('string cannot be undefined or null')\n\t}\n\tconst result: string[] = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length)\n\t{\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGraphem(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\nexport function nextUnits(i: number, string: string)\n{\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\n\t{\n\t\treturn EnumCodeUnits.unit_1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tlet nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\n\t{\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair))\n\t{\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\treturn EnumCodeUnits.unit_2\n}\n\nexport function isFirstOfSurrogatePair(string: string)\n{\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\n}\n\nexport function isRegionalIndicator(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\n}\n\nexport function isFitzpatrickModifier(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\n}\n\nexport function isVariationSelector(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\n}\n\nexport function isDiacriticalMark(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\n}\n\nexport function isGraphem(string: string)\n{\n\treturn typeof string === 'string' && GRAPHEMS.includes(string.charCodeAt(0))\n}\n\nexport function isZeroWidthJoiner(string: string)\n{\n\treturn typeof string === 'string' && string.charCodeAt(0) === EnumRunesCode.ZWJ\n}\n\nexport function codePointFromSurrogatePair(pair: string)\n{\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nexport function betweenInclusive(value: number, lower: number, upper: number)\n{\n\treturn value >= lower && value <= upper\n}\n\nexport function substring(string: string, start?: number, width?: number)\n{\n\tconst chars = runes(string)\n\tif (start === undefined)\n\t{\n\t\treturn string\n\t}\n\tif (start >= chars.length)\n\t{\n\t\treturn ''\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest))\n\t{\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join('')\n}\n\nexport { substring as substr }\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(runes, 'runes', { value: runes });\n\tObject.defineProperty(runes, 'default', { value: runes });\n\tObject.defineProperty(runes, \"__esModule\", { value: true });\n\n\tObject.defineProperty(runes, 'substr', { value: substring });\n\tObject.defineProperty(runes, 'substring', { value: substring });\n\n\t// @ts-ignore\n\tObject.defineProperty(runes, 'EnumRunesCode', { value: EnumRunesCode });\n\t// @ts-ignore\n\tObject.defineProperty(runes, 'EnumCodeUnits', { value: EnumCodeUnits });\n\tObject.defineProperty(runes, 'GRAPHEMS', { value: GRAPHEMS });\n}\n\nexport default runes\n"],"names":["EnumRunesCode","GRAPHEMS","Object","freeze","EnumCodeUnits","runes","string","TypeError","i","increment","isGraphem","isDiacriticalMark","isZeroWidthJoiner","result","push","substring","nextUnits","isFirstOfSurrogatePair","current","length","currentPair","nextPair","isRegionalIndicator","isFitzpatrickModifier","betweenInclusive","charCodeAt","codePointFromSurrogatePair","isVariationSelector","includes","pair","value","lower","upper","start","width","chars","undefined"],"mappings":";;;8DAoBCA,EAAAA,EAAA,qBAAA,SAAA;EApB8BA,EAAAA,EAAA,sBAAA,SAAA,uBAG9BA,EAAAA,EAAA,2BAAA,UAAA;EAIAA,EAAAA,EAAA,yBAAA,UAAA,0BACAA,EAAAA,EAAA,6BAAA,UAAA;EAGAA,EAAAA,EAAA,2BAAA,UAAA,4BAEAA,EAAAA,EAAA,2BAAA,SAAA;EAGAA,EAAAA,EAAA,yBAAA,SAAA,0BACAA,EAAAA,EAAA,0BAAA,QAAA;EAjBiBA,EAAAA,EAoBjB,wBAAA,QAAA,yBAEYA,EAAAA,EAAyB,MAAA,QAAA;AAE/B,EAAAA,MAAAA,IAAAA,CAAAA;;AAEA,MAAAC,IAAAC,OAAAC,OAAA,0EAUN,QAEK,QAAN,QAEC;;AAEA,IAAAC;;AAYA,SAAQC,MAASC;MAEPA,mBAAAA,aACLC,UAAA;YAIA;MAEHC,IAAA,OAEG;EAEHA,MAAAA,IAAAA,EAAAA,UACAC,KAAAD,UAAAA,IAAAC,GAAAH,IAGAI,UAAAJ,EAAAE,IAAAC;EAQFE,kBAAAL,EAAAE,IAAAC,OAQDA,KAKCG,kBAAKN,EAAsBE,IAACC,aAM5BI,EAAYC,KAAAR,EAAAS,UAAAP,GAAAA,IAAAC;;EAkBZ,OAAAI;;;AAGC,SAAAG,UAAAR,GAAAF;;EAEF,KAACW,uBAAAC,MAAAV,MAAAF,EAAAa,SAAA,GAED,OAAgB;EAKV,MAAAC,IAAAF,IAAAZ,EAAAE,IAAA;EAEL,IAAwBa,IAAAf,EAAAS,UAAAP,IAAA,GAAAA,IAAA;EACxB,OAAAc,oBAAAF,MAAAE,oBAEKD,MAOLE,2BALA,IAWA;;;AAIA,SAAAN,uBAAAX;EACA,OAAAA,KAAAkB,iBAAAlB,EAAA,GAAAmB,WAAA,IAAA,OAEK;;;AAGL,SAAAH,oBAAAhB;SAI0EkB,iBAAAE,2BAAApB,IAAA,QAAA;;;SAE9CiB,sBAAAjB;EAC5B,OAAAkB,iBAAAE,2BAAApB,IAAA,QAAA;;;AAIA,SAAAqB,oBAAArB;EACA,OAAA,mBAAAA,KAAAkB,iBAAAlB,EAAAmB,WAAA,IAAA,OAAA;;;AAKId,SAAAA,kBAAAA;EAEH,OAAA,mBAAAL,KAAAkB,iBAAAlB,EAAAmB,WAAA,IAAA,MAAA;;;AAED,SAAAf,UAAAJ;EAtDD,OAsDC,mBAAAA,KAAAL,EAAA2B,SAAAtB,EAAAmB,WAAA;AAGC;;AAED,SAAAb,kBAAuCN;EACvC,OAAA,mBAAAA,KAAA,SAAAA,EAAAmB,WAAA;AAHC;;SAMQC,2BAAYG;YAEGJ,WAAAA,KAAAA,SACxB,OAAAI,EAAAJ,WAAA,KAAA,SAAA;AAKD;;AAGC,SAAAD,iBAA+CM,GAAAC,GAAAC;EAC/C,OAAAF,KAAAC,KAAAD,KAAAE;AAJD;;AAOC,SAAOjB,aAA0CkB,GAAAC;EAKjD,MAAAC,IAAO9B,MAAAC;EACP,SAAA8B,MAAAH,GANA,OAAA3B;;;;;;;UAnKiBF;EASjBA,EAAsBA,EAAA,SAAA,KAAA,UAGrBA,4BAEGA,EAAIA,EAAC,SAAA,KAAA;;;"}