{"version":3,"file":"index.cjs.development.cjs","sources":["../src/index.ts","../src/index.cts"],"sourcesContent":["export const enum EnumRunesCode\n{\n\tHIGH_SURROGATE_START = 0xd800,\n\tHIGH_SURROGATE_END = 0xdbff,\n\n\tLOW_SURROGATE_START = 0xdc00,\n\n\tREGIONAL_INDICATOR_START = 0x1f1e6,\n\tREGIONAL_INDICATOR_END = 0x1f1ff,\n\n\tFITZPATRICK_MODIFIER_START = 0x1f3fb,\n\tFITZPATRICK_MODIFIER_END = 0x1f3ff,\n\n\tVARIATION_MODIFIER_START = 0xfe00,\n\tVARIATION_MODIFIER_END = 0xfe0f,\n\n\tDIACRITICAL_MARKS_START = 0x20d0,\n\tDIACRITICAL_MARKS_END = 0x20ff,\n\n\tZWJ = 0x200d,\n}\n\nexport const GRAPHEMS = Object.freeze([\n\t0x0308, // ( ◌̈ ) COMBINING DIAERESIS\n\t0x0937, // ( ष ) DEVANAGARI LETTER SSA\n\t0x093F, // ( ि ) DEVANAGARI VOWEL SIGN I\n\t0x0BA8, // ( ந ) TAMIL LETTER NA\n\t0x0BBF, // ( ி ) TAMIL VOWEL SIGN I\n\t0x0BCD, // ( ◌்) TAMIL SIGN VIRAMA\n\t0x0E31, // ( ◌ั ) THAI CHARACTER MAI HAN-AKAT\n\t0x0E33, // ( ำ ) THAI CHARACTER SARA AM\n\t0x0E40, // ( เ ) THAI CHARACTER SARA E\n\t0x0E49, // ( เ ) THAI CHARACTER MAI THO\n\t0x1100, // ( ᄀ ) HANGUL CHOSEONG KIYEOK\n\t0x1161, // ( ᅡ ) HANGUL JUNGSEONG A\n\t0x11A8, // ( ᆨ ) HANGUL JONGSEONG KIYEOK\n]);\n\nexport const enum EnumCodeUnits\n{\n\tunit_1 = 1,\n\tunit_2 = 2,\n\tunit_4 = 4,\n}\n\nexport function runes(string: string): string[]\n{\n\tif (typeof string !== 'string')\n\t{\n\t\tthrow new TypeError('string cannot be undefined or null')\n\t}\n\tconst result: string[] = []\n\tlet i = 0\n\tlet increment = 0\n\twhile (i < string.length)\n\t{\n\t\tincrement += nextUnits(i + increment, string)\n\t\tif (isGraphem(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isVariationSelector(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isDiacriticalMark(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t}\n\t\tif (isZeroWidthJoiner(string[i + increment]))\n\t\t{\n\t\t\tincrement++\n\t\t\tcontinue\n\t\t}\n\t\tresult.push(string.substring(i, i + increment))\n\t\ti += increment\n\t\tincrement = 0\n\t}\n\treturn result\n}\n\n// Decide how many code units make up the current character.\n// BMP characters: 1 code unit\n// Non-BMP characters (represented by surrogate pairs): 2 code units\n// Emoji with skin-tone modifiers: 4 code units (2 code points)\n// Country flags: 4 code units (2 code points)\n// Variations: 2 code units\nexport function nextUnits(i: number, string: string)\n{\n\tconst current = string[i]\n\t// If we don't have a value that is part of a surrogate pair, or we're at\n\t// the end, only take the value at i\n\tif (!isFirstOfSurrogatePair(current) || i === string.length - 1)\n\t{\n\t\treturn EnumCodeUnits.unit_1\n\t}\n\n\tconst currentPair = current + string[i + 1]\n\tlet nextPair = string.substring(i + 2, i + 5)\n\n\t// Country flags are comprised of two regional indicator symbols,\n\t// each represented by a surrogate pair.\n\t// See http://emojipedia.org/flags/\n\t// If both pairs are regional indicator symbols, take 4\n\tif (isRegionalIndicator(currentPair) && isRegionalIndicator(nextPair))\n\t{\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\n\t// If the next pair make a Fitzpatrick skin tone\n\t// modifier, take 4\n\t// See http://emojipedia.org/modifiers/\n\t// Technically, only some code points are meant to be\n\t// combined with the skin tone modifiers. This function\n\t// does not check the current pair to see if it is\n\t// one of them.\n\tif (isFitzpatrickModifier(nextPair))\n\t{\n\t\treturn EnumCodeUnits.unit_4\n\t}\n\treturn EnumCodeUnits.unit_2\n}\n\nexport function isFirstOfSurrogatePair(string: string)\n{\n\treturn string && betweenInclusive(string[0].charCodeAt(0), EnumRunesCode.HIGH_SURROGATE_START, EnumRunesCode.HIGH_SURROGATE_END)\n}\n\nexport function isRegionalIndicator(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.REGIONAL_INDICATOR_START, EnumRunesCode.REGIONAL_INDICATOR_END)\n}\n\nexport function isFitzpatrickModifier(string: string)\n{\n\treturn betweenInclusive(codePointFromSurrogatePair(string), EnumRunesCode.FITZPATRICK_MODIFIER_START, EnumRunesCode.FITZPATRICK_MODIFIER_END)\n}\n\nexport function isVariationSelector(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.VARIATION_MODIFIER_START, EnumRunesCode.VARIATION_MODIFIER_END)\n}\n\nexport function isDiacriticalMark(string: string)\n{\n\treturn typeof string === 'string' && betweenInclusive(string.charCodeAt(0), EnumRunesCode.DIACRITICAL_MARKS_START, EnumRunesCode.DIACRITICAL_MARKS_END)\n}\n\nexport function isGraphem(string: string)\n{\n\treturn typeof string === 'string' && GRAPHEMS.includes(string.charCodeAt(0))\n}\n\nexport function isZeroWidthJoiner(string: string)\n{\n\treturn typeof string === 'string' && string.charCodeAt(0) === EnumRunesCode.ZWJ\n}\n\nexport function codePointFromSurrogatePair(pair: string)\n{\n\tconst highOffset = pair.charCodeAt(0) - EnumRunesCode.HIGH_SURROGATE_START\n\tconst lowOffset = pair.charCodeAt(1) - EnumRunesCode.LOW_SURROGATE_START\n\treturn (highOffset << 10) + lowOffset + 0x10000\n}\n\nexport function betweenInclusive(value: number, lower: number, upper: number)\n{\n\treturn value >= lower && value <= upper\n}\n\nexport function substring(string: string, start?: number, width?: number)\n{\n\tconst chars = runes(string)\n\tif (start === undefined)\n\t{\n\t\treturn string\n\t}\n\tif (start >= chars.length)\n\t{\n\t\treturn ''\n\t}\n\tconst rest = chars.length - start\n\tconst stringWidth = width === undefined ? rest : width\n\tlet endIndex = start + stringWidth\n\tif (endIndex > (start + rest))\n\t{\n\t\tendIndex = undefined\n\t}\n\treturn chars.slice(start, endIndex).join('')\n}\n\nexport { substring as substr }\n\n// @ts-ignore\nif (process.env.TSDX_FORMAT !== 'esm')\n{\n\tObject.defineProperty(runes, 'runes', { value: runes });\n\tObject.defineProperty(runes, 'default', { value: runes });\n\tObject.defineProperty(runes, \"__esModule\", { value: true });\n\n\tObject.defineProperty(runes, 'substr', { value: substring });\n\tObject.defineProperty(runes, 'substring', { value: substring });\n\n\t// @ts-ignore\n\tObject.defineProperty(runes, 'EnumRunesCode', { value: EnumRunesCode });\n\t// @ts-ignore\n\tObject.defineProperty(runes, 'EnumCodeUnits', { value: EnumCodeUnits });\n\tObject.defineProperty(runes, 'GRAPHEMS', { value: GRAPHEMS });\n}\n\nexport default runes\n","import { default as _ } from './index';\n\n// @ts-ignore\nexport = _\n"],"names":["EnumRunesCode","EnumCodeUnits","runes","string","TypeError","i","increment","isGraphem","isDiacriticalMark","result","isRegionalIndicator","isZeroWidthJoiner","codePointFromSurrogatePair","charCodeAt","betweenInclusive","substring","_"],"mappings":"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"}